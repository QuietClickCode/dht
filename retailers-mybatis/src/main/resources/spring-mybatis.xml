<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-4.1.xsd">


	<bean id="placeholderConfig"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>classpath:db.properties</value>
		</property>
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		  destroy-method="close">
		<property name="url" value="${datasource.url}" />
		<property name="username" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="driverClassName" value="${datasource.driverClassName}" />
		<property name="filters" value="${datasource.filters}" />

		<property name="maxActive" value="${datasource.maxActive}" />
		<property name="initialSize" value="${datasource.initialSize}" />
		<property name="maxWait" value="${datasource.maxWait}" />
		<property name="minIdle" value="${datasource.minIdle}" />
		<property name="connectionInitSqls" value="set names utf8mb4;"/>
		<!--<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />-->
		<!--<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />-->

		<!--<property name="validationQuery" value="${validationQuery}" />-->
		<!--<property name="testWhileIdle" value="${testWhileIdle}" />-->
		<!--<property name="testOnBorrow" value="${testOnBorrow}" />-->
		<!--<property name="testOnReturn" value="${testOnReturn}" />-->
		<!--<property name="maxOpenPreparedStatements"-->
				  <!--value="${maxOpenPreparedStatements}" />-->
		<!--<property name="removeAbandoned" value="${removeAbandoned}" /> &lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;-->
		<!--<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}" /> &lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;-->
		<!--<property name="logAbandoned" value="${logAbandoned}" /> &lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;-->
	</bean>
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--引用别名配置文件，在mapper配置文件里引用时，就可以直接使用别名  -->
		<property name="configLocation" value="classpath:configuration.xml"/>
		<!-- 自动扫描mapping目录, 省掉mybatis-config.xml里的手工配置 -->
		<property name="mapperLocations">
			<array>
				<value>classpath*:com/retailers/**/**/mapper/*.xml</value>
				<value>classpath*:com/retailers/**/mapper/*.xml</value>
			</array>
		</property>
		<!--<value>classpath*:com/esp/bot/**/mapper/*.xml</value>-->
	</bean>
	<!-- 使用mapper接口的时候扫描 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--<property name="basePackage" value="com.esp.*.dao,com.esp.bot.*.dao,com.esp.mybatis.*.dao,com.esp.shop.*.dao" />-->
		<property name="basePackage" value="com.retailers.*.*.dao,com.retailers.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<task:executor id="myexecutor" pool-size="50"  />
	<task:scheduler id="qbScheduler" pool-size="30" />
	<task:annotation-driven executor="myexecutor" scheduler="qbScheduler" />
</beans>
