<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.retailers.dht.common.dao.OrderDetailMapper">

	<resultMap id="rm_orderDetail" type="com.retailers.dht.common.entity.OrderDetail">
			<result property="id" column="id"/>
			<result property="odOrderId" column="od_order_id"/>
			<result property="odGoodsId" column="od_goods_id"/>
			<result property="odGoodsPrice" column="od_goods_price"/>
			<result property="odActualPrice" column="od_actual_price"/>
			<result property="odMenberPrice" column="od_menber_price"/>
			<result property="odBuyNumber" column="od_buy_number"/>
			<result property="odGdId" column="od_gd_id"/>
			<result property="odIsDiscount" column="od_is_discount"/>
			<result property="odInviterUid" column="od_inviter_uid"/>
			<result property="odIsRefund" column="od_is_refund"/>
			<result property="remark" column="remark"/>
	</resultMap>
	<resultMap id="rm_orderDetail_vo" type="com.retailers.dht.common.vo.OrderDetailVo">
		<result property="id" column="id"/>
		<result property="odOrderId" column="od_order_id"/>
		<result property="odGoodsPrice" column="od_goods_price"/>
		<result property="odActualPrice" column="od_actual_price"/>
		<result property="odMenberPrice" column="od_menber_price"/>
		<result property="odBuyNumber" column="od_buy_number"/>
		<result property="odInviterNm" column="odInviterNm"/>
		<result property="remark" column="remark"/>
		<result property="gId" column="g_id"/>
		<result property="gdPrice" column="gd_price"/>
		<result property="gName" column="gname"/>
		<result property="type" column="type"/>
		<result property="imgUrl" column="img_url"/>
		<result property="gImgUrl" column="gimgurl"/>
		<result property="gsName" column="gsname"/>
		<result property="orderType" column="orderType"/>
	</resultMap>
	<!-- 用于select查询公用抽取的列 -->
	<sql id="orderDetail_columns">
		id,od_order_id,od_goods_id,od_goods_price,od_actual_price,od_menber_price,od_buy_number,od_gd_id,od_is_discount,od_inviter_uid,od_is_refund,remark
	</sql>
	<!-- 根据订单详情主键取得数据 -->
	<select id="queryOrderDetailById" resultMap="rm_orderDetail" parameterType="java.lang.Long">
		SELECT <include refid="orderDetail_columns" />
		FROM t_order_detail WHERE id = #{id}
	</select>
	<!-- 根据订单号取得订单id -->
	<select id="queryOrderDetailByOdId" resultMap="rm_orderDetail" parameterType="java.lang.Long">
		SELECT <include refid="orderDetail_columns" />
		FROM t_order_detail WHERE od_order_id = #{orderId}
	</select>
	<!-- 根据订单号取得订单详情 -->
	<select id="queryOrderDetailByOdIds" resultMap="rm_orderDetail">
		SELECT <include refid="orderDetail_columns" />
		FROM t_order_detail WHERE od_order_id IN
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")" >
			#{item}
		</foreach>
	</select>
	<!-- 订单详情查询条件组合 -->
	<sql id="orderDetail_where">
		<where>
			<if test="null != params.id">
				AND id = #{params.id}
			</if>
			<if test="null != params.odOrderId">
				AND od_order_id = #{params.odOrderId}
			</if>
			<if test="null != params.odGoodsId">
				AND od_goods_id = #{params.odGoodsId}
			</if>
			<if test="null != params.odGoodsPrice">
				AND od_goods_price = #{params.odGoodsPrice}
			</if>
			<if test="null != params.odActualPrice">
				AND od_actual_price = #{params.odActualPrice}
			</if>
			<if test="null != params.odBuyNumber">
				AND od_buy_number = #{params.odBuyNumber}
			</if>
			<if test="null != params.odGdId and '' != params.odGdId">
				AND od_gd_id = #{params.odGdId}
			</if>
			<if test="null != params.odIsRefund">
				AND od_is_refund = #{params.odIsRefund}
			</if>
			<if test="null != params.remark and '' != params.remark">
				AND remark = #{params.remark}
			</if>
		</where>
	</sql>
	<!--分页查询 -->
	<select id="queryOrderDetailList" resultMap="rm_orderDetail" parameterType="com.retailers.mybatis.pagination.Pagination">
		SELECT <include refid="orderDetail_columns" />
		FROM t_order_detail
		<include refid="orderDetail_where"/>
	</select>
	<!--添加订单详情 -->
	<insert id="saveOrderDetail" parameterType="com.retailers.dht.common.entity.OrderDetail" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_order_detail (
			od_order_id,od_goods_id,od_goods_price,od_actual_price,od_menber_price,od_buy_number,od_gd_id,od_is_discount,od_inviter_uid,od_is_refund,remark
		) VALUES
		(
			#{odOrderId,jdbcType=BIGINT},#{odGoodsId,jdbcType=BIGINT},#{odGoodsPrice,jdbcType=BIGINT},#{odActualPrice,jdbcType=BIGINT},#{odMenberPrice,jdbcType=BIGINT},
			#{odBuyNumber,jdbcType=INTEGER},#{odGdId,jdbcType=VARCHAR},#{odIsDiscount,jdbcType=INTEGER},#{odInviterUid,jdbcType=BIGINT},#{odIsRefund,jdbcType=INTEGER},#{remark,jdbcType=VARCHAR}
		)
	</insert>
	<!--批量添加订单详情-->
	<insert id="saveOrderDetails" parameterType="com.retailers.dht.common.entity.OrderDetail" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO t_order_detail (
		od_order_id,od_goods_id,od_goods_price,od_actual_price,od_menber_price,od_buy_number,od_gd_id,od_is_discount,od_inviter_uid,od_is_refund,remark
		) VALUES
		<foreach collection="list" item="item" index="index" separator="," >
			(
				#{item.odOrderId,jdbcType=BIGINT},
				#{item.odGoodsId,jdbcType=BIGINT},
				#{item.odGoodsPrice,jdbcType=BIGINT},
				#{item.odActualPrice,jdbcType=BIGINT},
				#{item.odMenberPrice,jdbcType=BIGINT},
				#{item.odBuyNumber,jdbcType=INTEGER},
				#{item.odGdId,jdbcType=VARCHAR},
				#{item.odIsDiscount,jdbcType=INTEGER},
				#{item.odInviterUid,jdbcType=BIGINT},
				#{item.odIsRefund,jdbcType=INTEGER},
				#{item.remark,jdbcType=VARCHAR}
			)
		</foreach>

	</insert>
	<!--修改订单详情 -->
	<update id="updateOrderDetail" parameterType="com.retailers.dht.common.entity.OrderDetail">
		UPDATE t_order_detail
		<set>
            <if test="null != odOrderId">
                od_order_id = #{odOrderId},
            </if>
            <if test="null != odGoodsId">
                od_goods_id = #{odGoodsId},
            </if>
            <if test="null != odGoodsPrice">
                od_goods_price = #{odGoodsPrice},
            </if>
            <if test="null != odActualPrice">
                od_actual_price = #{odActualPrice},
            </if>
            <if test="null != odBuyNumber">
                od_buy_number = #{odBuyNumber},
            </if>
            <if test="null != odGdId and '' != odGdId">
                od_gd_id = #{odGdId},
            </if>
            <if test="null != odIsRefund">
                od_is_refund = #{odIsRefund},
            </if>
            <if test="null != remark and '' != remark">
                remark = #{remark},
            </if>
		</set>
		WHERE id = #{id}
	</update>

	<!--修改商品会员价（用钱包支付时，实际支付金额) -->
	<update id="updateOrderDetails" parameterType="com.retailers.dht.common.entity.OrderDetail">
		UPDATE t_order_detail
		<set>
			od_menber_price = CASE
			<foreach collection="list" item="item" index="index" >
				WHEN  id=#{item.id} THEN
				#{item.odMenberPrice}
			</foreach> end,
		</set>
		WHERE
		<foreach collection="list" item="item" index="index" separator="or" >
			id=#{item.id}
		</foreach>
	</update>
	<!--删除订单详情 -->
	<delete id="deleteOrderDetailById" parameterType="java.lang.Long">
		DELETE FROM t_order_detail WHERE id = #{id}
	</delete>

	<!--取得购买详情 -->
	<select id="buyOrderDetailInfos" resultMap="rm_orderDetail_vo">
		SELECT
		d.id,
		d.od_order_id,
		d.od_goods_price,
		d.od_actual_price,
		d.od_menber_price,
		d.od_buy_number,
		d.remark,
		t.*
		FROM
		t_order o,
		t_order_detail d,
		(
		(
		SELECT
		t1.g_id,
		t1.gd_id,
		t1.gd_price,
		t2.g_name gname,
		0 type,
		t3.show_url img_url,
		t5.show_url gimgurl,
		GROUP_CONCAT(DISTINCT t7.gsv_val) gsname,
		'SHOPPING' orderType
		FROM
		t_goods_detail t1
		LEFT JOIN t_goods t2 ON t1.g_id = t2.g_id
		LEFT JOIN t_attachment t3 ON t3.id = t1.gd_imgid
		LEFT JOIN t_goods_image t4 ON t1.g_id = t4.g_id
		LEFT JOIN t_attachment t5 ON t4.gi_id = t5.id
		LEFT JOIN t_goods_ggsval_detail t6 ON t1.gd_id = t6.gd_id
		LEFT JOIN t_goods_gsval t7 ON t7.gsv_id = t6.gsv_id
		GROUP BY
		t1.gd_id
		)
		UNION
		(
		SELECT
		t1.g_id,
		t0.gdcp_id gd_id,
		t1.gd_price,
		t2.g_name gname,
		1 type,
		t3.show_url img_url,
		t5.show_url gimgurl,
		GROUP_CONCAT(DISTINCT t7.gsv_val) gsname,
		'CUT_PRICE' orderType
		FROM
		t_goods_gdcprel t0
		LEFT JOIN t_goods_detail t1 ON t0.gd_id = t1.gd_id
		LEFT JOIN t_goods t2 ON t1.g_id = t2.g_id
		LEFT JOIN t_attachment t3 ON t3.id = t1.gd_imgid
		LEFT JOIN t_goods_image t4 ON t1.g_id = t4.g_id
		LEFT JOIN t_attachment t5 ON t4.gi_id = t5.id
		LEFT JOIN t_goods_ggsval_detail t6 ON t1.gd_id = t6.gd_id
		LEFT JOIN t_goods_gsval t7 ON t7.gsv_id = t6.gsv_id
		GROUP BY
		t0.gdcp_id
		)
		UNION
		(
		SELECT
		t1.g_id,
		t0.gdsp_id gd_id,
		t1.gd_price,
		t2.g_name gname,
		2 type,
		t3.show_url img_url,
		t5.show_url gimgurl,
		GROUP_CONCAT(DISTINCT t7.gsv_val) gsname,
		'SECKILL' orderType
		FROM
		t_goods_gdsprel t0
		LEFT JOIN t_goods_detail t1 ON t0.gd_id = t1.gd_id
		LEFT JOIN t_goods t2 ON t1.g_id = t2.g_id
		LEFT JOIN t_attachment t3 ON t3.id = t1.gd_imgid
		LEFT JOIN t_goods_image t4 ON t1.g_id = t4.g_id
		LEFT JOIN t_attachment t5 ON t4.gi_id = t5.id
		LEFT JOIN t_goods_ggsval_detail t6 ON t1.gd_id = t6.gd_id
		LEFT JOIN t_goods_gsval t7 ON t7.gsv_id = t6.gsv_id
		GROUP BY
		t0.gdsp_id
		)
		UNION
		(
		SELECT
		t1.g_id,
		t0.gdsp_id gd_id,
		t1.gd_price,
		t2.g_name gname,
		2 type,
		t3.show_url img_url,
		t5.show_url gimgurl,
		GROUP_CONCAT(DISTINCT t7.gsv_val) gsname,
		'SPECIAL_OFFER' orderType
		FROM
		t_goods_gdsprel t0
		LEFT JOIN t_goods_detail t1 ON t0.gd_id = t1.gd_id
		LEFT JOIN t_goods t2 ON t1.g_id = t2.g_id
		LEFT JOIN t_attachment t3 ON t3.id = t1.gd_imgid
		LEFT JOIN t_goods_image t4 ON t1.g_id = t4.g_id
		LEFT JOIN t_attachment t5 ON t4.gi_id = t5.id
		LEFT JOIN t_goods_ggsval_detail t6 ON t1.gd_id = t6.gd_id
		LEFT JOIN t_goods_gsval t7 ON t7.gsv_id = t6.gsv_id
		GROUP BY
		t0.gdsp_id
		)
		UNION
		(
		SELECT
		r.r_id g_id,
		d.od_gd_id gd_id,
		r.r_price gd_price,
		r.r_name gsname,
		3 type,
		a.show_url img_url,
		a.show_url gimgurl,
		r.r_name gsname,
		'RECHARGE' orderType
		FROM
		t_order o,
		t_order_detail d,
		t_recharge r
		LEFT JOIN t_attachment a ON r.r_logo = a.id
		WHERE
		o.id = d.od_order_id
		AND d.od_goods_id = r.r_id
		AND o.order_type = 'RECHARGE'
		)
		) t
		WHERE
		o.id = d.od_order_id
		AND o.order_type = t.orderType
		AND d.od_goods_id = t.g_id
		AND d.od_gd_id = t.gd_id
		AND d.od_order_id IN
		<foreach collection="list" item="item" index="index" separator="," open="(" close=")" >
			#{item}
		</foreach>
	</select>
</mapper>
